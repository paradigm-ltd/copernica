pub const PARSE_INFO_POS: usize= 0;

pub const FRAGMENT_SIZE: usize= 1024;

pub const LENGTH_OF_DATA_STARTING_POSITION: usize = FRAGMENT_SIZE-2;
pub const LENGTH_OF_DATA_ENDING_POSITION: usize = FRAGMENT_SIZE-1;
pub const DATA_SIZE: usize = FRAGMENT_SIZE-3;

pub const ONE_BYTE: usize = 1;
pub const TWO_BYTE: usize = 2;
pub const BLOOM_FILTER_LENGTH: usize = u16::MAX as usize;
pub const BLOOM_FILTER_INDEX_ELEMENT_LENGTH: usize = 4;
pub const NONCE_SIZE: usize = 8;
pub const TAG_SIZE: usize = 16;
pub const ID_SIZE: usize = 32;
pub const CC_SIZE: usize = 32;
pub const SIG_SIZE: usize = 64;
pub const BFI_BYTE_SIZE: usize = BLOOM_FILTER_INDEX_ELEMENT_LENGTH * 2;
pub const BFI_COUNT: usize = 6; // RES, REQ, APP, MOD, FUN, ARG
pub const U64_SIZE: usize = 8;

pub const CYPHERTEXT_LINK_TX_PK_START: usize = 0;
pub const CYPHERTEXT_LINK_TX_PK_END: usize = CYPHERTEXT_LINK_TX_PK_START + ID_SIZE + CC_SIZE;
pub const CYPHERTEXT_LINK_NONCE_START: usize = CYPHERTEXT_LINK_TX_PK_END;
pub const CYPHERTEXT_LINK_NONCE_END: usize = CYPHERTEXT_LINK_NONCE_START + NONCE_SIZE;
pub const CYPHERTEXT_LINK_TAG_START: usize = CYPHERTEXT_LINK_NONCE_END;
pub const CYPHERTEXT_LINK_TAG_END: usize = CYPHERTEXT_LINK_TAG_START + TAG_SIZE;
pub const CYPHERTEXT_LINK_REPLY_TO_SIZE_START: usize = CYPHERTEXT_LINK_TAG_END;
pub const CYPHERTEXT_LINK_REPLY_TO_SIZE_END: usize = CYPHERTEXT_LINK_REPLY_TO_SIZE_START + ONE_BYTE;
pub const CYPHERTEXT_LINK_NARROW_WAIST_SIZE_START: usize = CYPHERTEXT_LINK_REPLY_TO_SIZE_END;
pub const CYPHERTEXT_LINK_NARROW_WAIST_SIZE_END: usize = CYPHERTEXT_LINK_NARROW_WAIST_SIZE_START + TWO_BYTE;

pub const CLEARTEXT_LINK_TX_PK_START: usize = 0;
pub const CLEARTEXT_LINK_TX_PK_END: usize = CLEARTEXT_LINK_TX_PK_START + ID_SIZE + CC_SIZE;
pub const CLEARTEXT_LINK_REPLY_TO_SIZE_START: usize = CLEARTEXT_LINK_TX_PK_END;
pub const CLEARTEXT_LINK_REPLY_TO_SIZE_END: usize = CLEARTEXT_LINK_REPLY_TO_SIZE_START + ONE_BYTE;
pub const CLEARTEXT_LINK_NARROW_WAIST_SIZE_START: usize = CLEARTEXT_LINK_REPLY_TO_SIZE_END;
pub const CLEARTEXT_LINK_NARROW_WAIST_SIZE_END: usize = CLEARTEXT_LINK_NARROW_WAIST_SIZE_START + TWO_BYTE;

pub const TO_REPLY_TO_MPSC: usize = 0;
pub const TO_REPLY_TO_UDPIP4: usize = 10;
pub const TO_REPLY_TO_UDPIP6: usize = 22;
pub const TO_REPLY_TO_RF: usize = 4;

pub const CYPHERTEXT_HBFI_SIZE: usize = ((BLOOM_FILTER_INDEX_ELEMENT_LENGTH * 2) * BFI_COUNT) + U64_SIZE + (ID_SIZE * 2) + (CC_SIZE * 2);
pub const CYPHERTEXT_RESPONSE_DATA_SIZE: usize = FRAGMENT_SIZE + TAG_SIZE;
pub const CYPHERTEXT_NARROW_WAIST_PACKET_RESPONSE_SIZE: usize = CYPHERTEXT_RESPONSE_DATA_SIZE + CYPHERTEXT_HBFI_SIZE + NONCE_SIZE + SIG_SIZE;
pub const CYPHERTEXT_NARROW_WAIST_PACKET_REQUEST_SIZE: usize = CYPHERTEXT_HBFI_SIZE + NONCE_SIZE;

pub const CLEARTEXT_HBFI_SIZE: usize = ((BLOOM_FILTER_INDEX_ELEMENT_LENGTH * 2) * BFI_COUNT) + U64_SIZE + ID_SIZE + CC_SIZE;
pub const CLEARTEXT_RESPONSE_DATA_SIZE: usize = FRAGMENT_SIZE;
pub const CLEARTEXT_NARROW_WAIST_PACKET_RESPONSE_SIZE: usize = CLEARTEXT_RESPONSE_DATA_SIZE + CLEARTEXT_HBFI_SIZE + NONCE_SIZE + SIG_SIZE;
pub const CLEARTEXT_NARROW_WAIST_PACKET_REQUEST_SIZE: usize = CLEARTEXT_HBFI_SIZE + NONCE_SIZE;

pub const CYPHERTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_START: usize = 0;
pub const CYPHERTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_END: usize = CYPHERTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_START + SIG_SIZE;
pub const CYPHERTEXT_NARROW_WAIST_PACKET_RESPONSE_NONCE_START: usize = CYPHERTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_END;
pub const CYPHERTEXT_NARROW_WAIST_PACKET_RESPONSE_NONCE_END: usize = CYPHERTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_END + NONCE_SIZE;

pub const CLEARTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_START: usize = 0;
pub const CLEARTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_END: usize = CLEARTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_START + SIG_SIZE;
pub const CLEARTEXT_NARROW_WAIST_PACKET_RESPONSE_NONCE_START: usize = CLEARTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_END;
pub const CLEARTEXT_NARROW_WAIST_PACKET_RESPONSE_NONCE_END: usize = CLEARTEXT_NARROW_WAIST_PACKET_RESPONSE_SIG_END + NONCE_SIZE;

pub const HBFI_OFFSET_START: usize = BFI_BYTE_SIZE * BFI_COUNT;
pub const HBFI_OFFSET_END: usize = HBFI_OFFSET_START + U64_SIZE;
pub const HBFI_RESPONSE_KEY_START: usize = HBFI_OFFSET_END;
pub const HBFI_RESPONSE_KEY_END: usize = HBFI_RESPONSE_KEY_START + ID_SIZE + CC_SIZE;
pub const HBFI_REQUEST_KEY_START: usize = HBFI_RESPONSE_KEY_END;
pub const HBFI_REQUEST_KEY_END: usize = HBFI_REQUEST_KEY_START + ID_SIZE + CC_SIZE;

pub const BOUNDED_BUFFER_SIZE: usize = 25;
pub const RESPONSE_STORE_SIZE: usize = 250;
pub const CONGESTION_CONTROL_SIZE: usize = 100;

pub const LOG_SESSION_START: &str = "Log Session Start";
pub const LOG_ERASE: &str = "Erase Log";
pub const LINE_TO_INCH: f32 = 0.0833; // graphviz uses inches ffs
